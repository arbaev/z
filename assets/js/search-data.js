var store = [{
        "title": "Шпаргалка по InDesign",
        "excerpt":"Концепция “объект и кадр”.Объект может быть любой формы. ctrl-D - импорт картинок, одной или нескольких. вставка происходит по очереди, смена очереди - стрелки лево-право. Если зажать ctrl, то вставятся сразу все картинки сеткой V - черная стрелка - двигает объектA - белая стрелка - двигает кадр A-Master - общая подложка под все страницы, нижний слой Library - сохранять свои темплейты, перед этим удалив с них фото Включить в настройках high performance для качественных превьюшек фото. w - быстрый предпросмотрshift-w - полный предпросмотр ctrl-2 (3) - приблизить к выбранному объекту,ctrl-0 - масштаб страницы на экран,ctrl-alt-0 - разворот на экран ctrl-[, ctrl-] - слой вверх/вниз ctrl-e - пропорционально вписать картинку в объект (обрезка)ctrl-shift-e - уменьшить картинку по размерам объекта (поля)ctrl-shift-c - центрировать картинку в объектеalt-e - изменить размер объекта по размеру картинки ctrl-alt-shift-v - вставить скопированную картинку в объект ctrl-b — свойства объекта, в том числе паддинги Пара из этих шорткатов — нестандартные, кастомизировал сам. Файл с моими шорткатами ","categories": [],
        "tags": ["indesign"],
        "url": "https://arbaev.github.io/z/2018/08/09/InDesign-cheatsheet.html"
      },{
        "title": "Список книг для почитать",
        "excerpt":"добавлено 15.04.2019##Джо Диспенза “Сила подсознания”   мне хотелось меняться, но я не знала как. Пока мне не попала в руки эта книга. Она всегда попадает к своему читателю вовремя. ","categories": [],
        "tags": ["books"],
        "url": "https://arbaev.github.io/z/2019/01/01/books-to-read.html"
      },{
        "title": "Rails: Настройка хранилища Amazon S3 и включение direct upload",
        "excerpt":"Первые три шага делаем согласно этому мануалу: Setting up Rails 5 Active Storage with Amazon S3   Зарегистрироваться на Amazon AWS  Создать Bucket (сервис S3)  Настроить пользователя для доступа к файлам (сервис IAM)      В config/storage.yml раскомментировать блок amazon:, указать имя бакета и псевдоним сервера. Обратить внимание на пробелы после раскомментирования строк. В каждой строке будет лишний пробел, который приводит к ошибке. Его надо удалить.         Полученные ключи доступа прописать в Rails credentials. Действуем по мануалу Rails 5.2 credentials.     Прописать в Gemgile gem AWS SDK for Ruby    gem 'aws-sdk', '~&gt; 3'# Если нужна только поддержка S3, можно установить только этот модульgem 'aws-sdk-s3', '~&gt; 1'        В файлах config/environments поменять настройку с :local на :amazon    #config.active_storage.service = :localconfig.active_storage.service = :amazon            Настроить права CORS  1) Открываем вкладку с бакетами, выбираем нужный  2) Выбрать раздел Permissions, перейти на вкладку CORS configuration  3) Вписать туда следующие строки:      &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\"&gt; &lt;CORSRule&gt;     &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;     &lt;AllowedMethod&gt;GET&lt;/AllowedMethod&gt;     &lt;MaxAgeSeconds&gt;3000&lt;/MaxAgeSeconds&gt;     &lt;AllowedHeader&gt;Authorization&lt;/AllowedHeader&gt; &lt;/CORSRule&gt; &lt;CORSRule&gt;     &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;     &lt;AllowedMethod&gt;PUT&lt;/AllowedMethod&gt;     &lt;AllowedMethod&gt;POST&lt;/AllowedMethod&gt;     &lt;MaxAgeSeconds&gt;3000&lt;/MaxAgeSeconds&gt;     &lt;AllowedHeader&gt;*&lt;/AllowedHeader&gt; &lt;/CORSRule&gt; &lt;/CORSConfiguration&gt;        4) Когда разработка будет закончена, стоит поменять права на допуск только с нашего сайта, то есть заменить строки AllowedOrigin:      &lt;AllowedOrigin&gt;https://*.mysite.com&lt;/AllowedOrigin&gt;      На этом настройка S3 закончена, файлы должны успешно загружаться. Настройка direct uploads Действуем по мануалу Прямые загрузкиА именно: 9. К полям загрузки в форме добавить аттрибут direct_upload: true 10. Создать файлы direct_upload.js и direct_upload.scss с содержимым из мануала выше. Убедиться, что файлы подключились. Прямая загрузка на S3 должна работать. ","categories": [],
        "tags": ["aws","rails"],
        "url": "https://arbaev.github.io/z/2019/04/17/rails5-amazon-s3-direct-uploads.html"
      },{
        "title": "Кодинг без ифов",
        "excerpt":"Перевод статьи coding without ifs То, что усложняет код больше всего на свете - это условная логика. Она усложняет код больше всего на свете. Все эти if, else, unless, как вложенные, так и не вложенные. Я всегда стараюсь избавиться от них где можно, потому что код без них легче читается и имеет лучший ритм. Сравните это: def update_subscriptions  Subscription.find(:all).each do |each|    if each.expired?      each.renew!    else      each.update!    end  endendс этим: def update_subscriptions  subscriptions = Subscription.find :all  expired = subscriptions.select { |each| each.expired? }  expired.each { |each| each.renew! }  active = subscriptions.reject { |each| each.expired? }  active.each { |each| each.update! }endВ приведенном выше коде об условной логике позаботились исчисляемые методы #select и #reject. Получается, мы переместили условную логику внутрь Ркби из нашего кода. Посмотрите, как во втором примере код просто спокойно течет вверх и вниз, без всяких отступов и ответвлений, его очень легко читать. Даже не программисты выбрали бы второй пример как более простой и элегантный.Еще пример. Скажем, фильтры контроллера в Rails работали так: class EventsController &lt; ApplicationController  def new  end  def create  end  def index  end  def show  end  private  def filter    if action_name == 'new' || action_name == 'create'      authenticate    end  end  # или через поиск в литерале  def filter    if %w(new create).include?(action_name)      authenticate    end  end  def authenticate    unless session[:user_id]      redirect_to login_url    end  endendВ методе #filter нужно условие, потому что мы хотим, чтобы юзер был залогинен для экшенов #new и #create. Однако, рельсовые методы фильтра поддерживают только ключ-параметр. Значит, можно переписать это дело используя метод класса #before_action: class EventsController &lt; ApplicationController  before_action :authenticate, :only =&gt; [:new, :create]  def new  end  def create  end  def index  end  def show  end  private  def authenticate    unless session[:user_id]      redirect_to login_url    end  endendЗдорово. В этот раз мы передвинули условную логику в нутро фреймворка. Где-то там в глубинах Рельс #before_action содержит иф, а в нашем коде его на один меньше. Валидации ActiveRecord::Base этот метод тоже поддерживают. Скажем, при регистрации на нашем сайте указывать возраст не обязательно, но если указали, то он должен быть между 18 и 30. class User &lt; ActiveRecord::Base  def validate    if !age.blank?      if ! (18..30).include?(age)        errors.add :age, 'must be between 18 and 30'      end    end  endendЧёрт ногу сломит, всё в ифах. К счастью, нам помогут методы валидации класса ActiveRecord::Base: class User &lt; ActiveRecord::Base  validates_inclusion_of :age,    :allow_nil =&gt; true,    :in =&gt; 18..30,    :message =&gt; 'must be between 18 and 30'endНамного лучше. Сейчас рельсовый хелпер #validates_inclusion_of содержит два ифа, а наш код — нуль. Забавно, что колбэки ActiveRecord::Base не поддерживают параметр if. Ещё пример. Допустим, в нашем приложении есть публикации. Публикации бывают двух типов, скажем ABC и XYZ. Сейчас информация о публикациях ABC и XYZ предоставляется их собственными сайтами, так что нам надо сделать запрос о них черех HTTP. Публикации мы храним у себя, чтобы не запрашивать их с удалённого сервера каждый раз. И в данном случае нам не нужно беспокоится о синхронизации, потому что публикации никогда не меняются. class Publication &lt; ActiveRecord::Base  def before_create    if type == 'ABC'      # название достаточно уникально, чтобы можно было по нему найти публикацию      self.attributes = AbcGateway.find name    end    if type == 'XYZ'      # название достаточно уникально, чтобы можно было по нему найти публикацию      self.attributes = XyzGateway.find name    end  endendОпять убогие условия. Я хочу отдать разбираться с ними Рельсам, используя метод класса #before_create вместо переопределения инстанс метода. class Publication &lt; ActiveRecord::Base  before_create :abc, :if =&gt; Proc.new { |publication| publication.type == 'ABC' }  before_create :xyz, :if =&gt; Proc.new { |publication| publication.type == 'XYZ' }  def abc    self.attributes = AbcGateway.find name  end  def xyz    self.attributes = XyzGateway.find name  endendТак-то лучше! Есть ещё кусочек синтаксического сахара, о котором я не позаботился. Мой первый пример можно переписать более компактно: def update_subscriptions  Subscription.find(:all).each do |each|    each.renew! if each.expired?    each.update! unless each.expired?  endendНо так мне не нравится, потому что код выглядит будто в нём нет условной логики, а она есть. Просто операторы if и unless скрылись в конце строк. Если уж логики не избежать, её должно быть хорошо видно. Пусть останется напоминание, что в этом месте можно кое-что отрефакторить. Тоже самое делает старый добрый тернарный оператор: def update_subscriptions  Subscription.find(:all).each do |each|    each.expired? ? each.renew! : each.update!  endendДаже короче получилось. Но опять неочевидная условная логика. К тому же двойной ‘?’ выглядит крайне убого. ","categories": [],
        "tags": ["ruby"],
        "url": "https://arbaev.github.io/z/2019/04/22/coding-without-ifs.html"
      },{
        "title": "Ruby: методы sort и sort_by",
        "excerpt":"В Ruby у класса Enumerable есть методы sort и sort_by. Первый выполняет простую сортировку массива. А вот второй более интересен.Sort_by передаёт в блок элементы один за другим, как это делает map, например. Но как, имея один объект из множества, отсортировать всё множество? Загадочный метод. В нём используется преобразование Шварца. Хитрость в том, что данные сначала проходят через наш блок и результаты вычислений заносится во временный массив попарно. Затем временный массив сортируется и получаем из него исходные данные в нужном порядке.Например, имеем массив строк: ary = ['seven', 'five', 'twelve', 'one']# отсортируем по длине строкиary.sort_by(&amp;:length)Шаг 1, сначала происходит вычисление данных во временный массив ary.map { |x| [x.length, x] } # =&gt; [[5, \"seven\"], [4, \"five\"], [6, \"twelve\"], [3, \"one\"]]Шаг 2, делается обычная сортировка ary.sort{ |x,y| x[0] &lt;=&gt; y[0] } # =&gt; [[3, \"one\"], [4, \"five\"], [5, \"seven\"], [6, \"twelve\"]]Шаг 3, получаем отсортированный массив ary.map{ |x,y| y } # =&gt; [\"one\", \"five\", \"seven\", \"twelve\"]Таким образом, можно писать замысловатые правила сортировки весьма элегантно. Например, мне надо было сделать следующую сортировку: ответы на вопрос по дате обновления, но первым должен быть лучший ответ, id которого указан в ресурсе вопроса. Для правильной сортировки мне оставалось “вычислить” лучший ответ в 0, а время остальных ответов преобразовать в число. def best_answer_first  question.best_answer_id == id ? 0 : created_at.to_iendquestion.answers.sort_by(&amp;:best_answer_first)Пример, вожможно, не слишком удачный, так как эту задачу можно решить простым скоупом на уровне базы. А sort_by всё же достаточно медленный и лучше приберечь его для более замысловатых сортировок. ","categories": [],
        "tags": ["ruby"],
        "url": "https://arbaev.github.io/z/2019/04/23/sort_by.html"
      },{
        "title": "Идеи стартапов с сайта IndieHackers",
        "excerpt":"редакция от 29.04.2019       Just Reach Out, $30000/moОбучение для организаций и предпринимателей навыкам PR, подготовке стратегий PR, питчей. Стоимость от $700 в месяц. Bootstrapping a SaaS That Empowers Businesses to Grow          PowerPack for Beaver Builder, $20000/moКомплект плагинов для WordPress. Лицензия на год $69.Pausing Our Digital Agency to Build a $20k/mo WordPress Plugin         EpicPxls, $400/moМикросток темплейтов и разных дизайнерских штучекHow I Turned Design Castoffs into a Profitable Community Marketplace         KeyCuts, $250/moНаклейки на клавиатуру с шорткатами Excelемае, почему только экселя, а не всех популярных программ? Наклейки недешёвые, кстатиHow I Aligned My Side Project with a New Full-Time Career         1kprojects, $600/moБиржа вебсайтовHow I Beat Maker Paralysis with an $800/mo Side Project         Lambdatest, $50000/moВиртуальное тестирование приложений в 2000 версиях браузеров How a Software Testing Problem Led Me to 26% Monthly Growth          750words, $20000/moСервис приватного фрирайтинга. Пишешь каждый день что угодно для себя, нигде это не публикуется. Фишка в прививании ежедневной практики писания. Выполняешь задачи, зарабатываешь бейджи. Цена 5 баксов в мес. Слабо верится в 20к дохода ежемес Transforming My Simple Daily Habit into $20,000 per Month          Keygen, $3000/moАПИ для лицензирования и дистрибуции софта. How I Found My Market (and a 10% Monthly Growth Rate)          TranslatePress, $10000/moВордПресс плагин для перевода сайта на разные языки Generating $10,000 Per Month from a Freemium Business Model          Better Web Typography, $2000/moКнига о шрифтах и типографике для дизайнеров и разработчиков How I Fell in Love with Typography and Literally Wrote the Book on It          Airfocus, $14000/moB2B сервис для планирования этапов развития продукта. Этакий специализированный Трелло. How I’m Balancing Multiple Companies, My Family, and a Passion Project          Pure React, $3000/moКурс (книга и упражнения) для начинающих изучать Реакт Confronting My Fears in the Hope of Retiring Early          Last Call Trivia Flex, $2000/moПодготовка шоу для баров с познавательными вопросами, типа «Своя игра» How I Went from Bartender to Side Hustler to CEO by Doing What I Love          Kontentino, $51000/moУправление соцсетями для контор и агенств. Составление постов, плана публикаций, дизайн, одобрение заказчиком и последующая публикация в ФБ, ИГ и Твиттере. Growing a Spin-Off Business to a Standalone Success          Plutio, $7000/moСервис для работы организациям с фрилансерами: обозначение задач, контроль работ, выставление инвойсов How Building a Community Helped Us Grow to 10,000 Users          HireClub, $13000/moДоска вакансий, которые размещают твои будущие сослуживцы, а не рекрутёры. А также услуги коучинга по найму, разбор резюме и подобное. How I Overcame Rejection and Built a Business by Focusing On Community          Customerly, $12000/moЧат для общения бизнеса со своими пользователями через моб или веб. How I Quit School and Learned to Launch a Successful Product          Plain Jane, $50000/moПроизводство продуктов из Каннабидиола, в основном сигареты и масло. How We Reached $50k/mo Despite Some Big Mistakes Along the Way          Gumroad, $350000/moПлощадка для продажи цифровых товаров: книг, туторов, курсов. I Started Gumroad as a Weekend Project and Now It’s Making $350k/Mo          Join It, $18000/moСервис для организации продаж членства в организациях и контроля этих процессов. Месячные, годовые подписки, акции, рассылки, дожимание отписавшихся и так далее. How I Learned to Code, Quit My Job, and Bootstrapped a Solution          Maze Engineers, $100000/moПроизводство лабиринтов для опытов над мышами :-O и другого научно-медицинского оборудования. Bootstrapping a Hardware Product to 7 Figures Despite Student Debt          Hallow, $1000/moМоб приложение: аудио-медитации для католиков. Quitting Our Jobs to Follow Our Callings          Statful, $22000/moСистема настраиваемого мониторинга чего угодно. How We Went From Problem to Product by Building for Ourselves          Scribly.io, $14000/moКопирайтинг по подписке. Pushing Past Imposter Syndrome to Turn My Passion Into a Business          VisaList, $700/moИнтерактивный список визовых режимов для всех стран. Плюс разная прочая инфа о путешествии в выбранную страну. How I Went Looking for Inspiration, Found It &amp; Launched Successfully          SolidGigs, $8000/moПлатное сообщество фрилансеров. Публикация проверенных вакансий, отзывы о негодяях, шаринг курсов, книг и других ресурсов. How I’ve Grown a No-frills Service to $4,000/Mo in Revenue          Burner Mail, $700/moСервис предоставляет временный имейл для приёма разной мути How “Slow and Steady” Is Getting Us to Our Goal of Ramen Profitability          Graphite, $12000/moДецентрализованная и защищённая система для совместной работы. Типа Гугл Докс, но своя, секурная. How Taking Back My Privacy Inspired a Product That Became a Business          SQRL, $1000/moПриложенька, которая показывает работодателю, сколько шагов сделали его сотрудники. Можно устанавливать награды и выплачивать реальные деньги за какие-то достижения. Но я не понял, кому это надо. Disrupting the Healthcare Industry while Balancing a 9 to 5    Шаблончик   , $/mo ","categories": [],
        "tags": ["идеи","ideas","стартап","startup"],
        "url": "https://arbaev.github.io/z/2019/04/27/indiehackers-ideas.html"
      },{
        "title": "Идеи проектов",
        "excerpt":"#Коллекции идейПроект Вастрика Расскажи, где болит #Веб-сервисы ###сервис организации сбора средств на что угоднотипа простого и быстрого кикстартера. Разные варианты приёма средств, информеры о продвижении дела. Если в установленный срок собрать сумму не удалось, пожертвовавшему предлагается три варианта действий: вернуть деньги за минусом комиссий, всё равно отправить собирателю денег или отправить в благотворительный фонд на выбор. ###сайт вопрос-ответ на тему микростоковтипа тостера ###telegram2rssагрегация каналов на сайте, подписка на каналы по рсс ###instagram2emailподписка на инстаграмы, еженедельное письмо с картинками ###подари деньжатприложение предлагает пожертвовать любую сумму случайным двум людям из 20 последних зарегистрировавшихся. Либо выбрать самому, либо наугад. И ставит пожертвовашего первым в список на пожертвования. монетизация за счёт комиссии? ####смешные фразыдетское приложение: составитель смешных фраз, как в книжке Жени Кац: “Сытый грузовик ловит кастрюлю”заморочится с жен/муж родом, множ.числом и склонением ###экономическая игра с рос акциямипо типу https://buildyourstax.com/Идея в том, чтобы оперировать реальными, но завуалированными данными компаний. А в конце открывать завесу, показывать период игры и какие акции участвовали. ###спорим?биржа ставок на собственные споры о чём угодно ###статистика шаттерстокаудобная страница статистики для авторов шаттерстока, особенно видео ###автоскриншотилка сайтовистория главной страницы разных компанийрасширить идею простой скриншотилки аля https://headerlove.com/ https://www.siteinspire.com/ ###виртуальное интервью   юзер выбирает тему интервью, ему задают 5 вопросов в виде теста и на основе его предпочтений задаются ещё 10-20 вопросов случайных по теме. после его ответов получается персональное интервью — можно взять себе на страничку или опубликовать на нашем сайте интервью.  возможность пропустить неудобный/неинтересный вопрос  режим реального интервью со случайным человеком  лучшее интервью недели  интеграция с соцсетями обязательно###каталог инстаграмовСначала появилась идея сделать каталог инстграмов стрит-фотографов. А затем подумал, что нет смысла ограничиваться стрит-фотографами. Каталог инстаграмов по любой теме! Фуд-фотографы, пейзажисты, каллиграфия, вышивка, что угодно.Сортировка по количеству подписчиков, последней активности, странам, рейтинги, подписки и так далее. ###КурсЛистКурируемый список курсов по разным темам с фильтрами и отзывами. Аналог по одной теме: http://rubycourses.ru/Идея расширить подобный сайт для любых тем обучения.           Я хочу изучать[профессию] [технологию] [навык]с материалами [на рус и англ] [на русском]вариант [оптимальный] или [бесплатный]                      [подобрать]###Слушал ли?приложенька для себя - слушал ли я эту музыку? собстно, быстрый поиск по своему каталогу музыки Контентные проекты ###Ноукод на русскомПростой контентный проект: каталог сервисов для создания всякого без программирования. Аналог http://www.nocode.tech/Области: Analytics, App Builders, Colour Pickers, Customer Support, Design Tools, Domains, Early Stage Users, Forms &amp; Surveys, Landing Pages, Logo Designers, Mockups, Name Generators, Newsletters, Outsourcing, Portfolio Creators, PR, SEO Tools, Social Media Tools, Social Plugins, Stock Photos, Stock Videos, Usability Testing, Video Editors, Website Builders, Website Generators ###пожить бы там!контентный проект “интересные дома нного города” с рефками аирбнб ###План чтенияКаждая страница сайта представляет собой список книг, отсортированных по важности изучения темы: Ключевые книги, Глубокое погружение, Дополнительные, Необязательные.Для каждой книги из плана кратко говориться зачем её читать.В конце плана предлагается раздел “Что дальше?”, в котором идут ссылки на планы чтения по смежным областям. Например, для EQ это будут: работа мозга, нетворкинг, переговоры.Примеры полок: нетворкинг, переговоры, писательство, интроверты, медитация и осознанность, истории бизнеса, тайм менеджмент, инвестиции, креативность, привычки и сила воли, как работает мозг, эффективность и продуктивность, уверенность в себе, сон ###русский квипсолоджисСайт по типу квипсолоджис: Раз в неделю подборка инетерсного: мувик, фото, музклип, иллюстрация, скульптура, архитектура, реклама и т.д. Рассылка, канал, паблик. Предложения от читателей Физические изделия ###ремень для офисного креслаиз ремня безопасности для авто делается ремень для офисного кресла. результат: хорошие осанка и глаза ###модульная клавиатураСделать модульную клавиатуру, к которой можно докупать и подключать требуемые блоки в любом порядке. Например, цифровой блок с левой стороны. Или даже два цифровых блока с каждой стороны. И так далее.   курсор с одной стороны или с двух  отдельный нумпад, тачпад, трекбол, джойстик, джогдиал  проводок-удлинитель 5-10-25см для гибкого соединения блоков  блок со скроллом (верт и хор) и программируемыми кнопками  мультимедиа/программируемые кнопки  блок проводного подключения с усб-хабом  блок беспроводного подключения с отсеком для батареек  подставка под заяпяться и ножки для отрицательного угла  вариант анти-rsi с развёрнутыми кнопками и скроллом посередине###фитнес-браслет с приложением подсчёта слов-паразитов ","categories": [],
        "tags": ["idea","startup","project"],
        "url": "https://arbaev.github.io/z/2019/05/01/project-ideas.html"
      },{
        "title": "Шпаргалка по Git",
        "excerpt":"Изменение названия коммита Чтобы изменить имя последнего коммита, достаточно ввести: git commit --amend -m \"Новое название коммита\" Для изменения имени других коммитов, нужно сделать: git commit --amend -c &lt;commit ID&gt; и отредактировать имя коммита через редактор. Git workflow Привести свою ветку в актуальное состояние (чтобы ее могли слить в master без конфликтов): git checkout mastergit pull origin master //обновляем свой локальный mastergit checkout &lt;имя-ветки&gt;git merge master  //сливаем master в свою ветку... если есть конфлиты, решаем их... и заканчиваем слияние git commitgit push origin &lt;имя-ветки&gt;  //выкладываем свою ветку в общий репозиторий... дальше вашу ветку без конфликтов могут слить в masterЕсли кроме вас никто в ветке не работает то вместо merge можно делать rebase, тогда не будет лишнего коммита при слиянии. И последние две команды будут такие: git rebase master  //подтянуть ветку к обновленному mastergit push -f origin &lt;имя-ветки&gt;  //принудительно обновить серверную ветку так как изменились коммиты после rebase","categories": [],
        "tags": ["git"],
        "url": "https://arbaev.github.io/z/2019/05/05/git-help.html"
      },{
        "title": "Самые любимые треки",
        "excerpt":"####Whitey - 2007 - Great Shakes   03 Wrap It Up  04 I Made Myself Invisible####Manchester Orchestra - 2011 - Simple Math   05 Pale Black Eye  06 Virgin####Moonspell - 1995 - Wolfheart   02 Love Crimes####Sister Machine Gun - 1997 - Metropolis   06 Torque####KMFDM - 1995 - Nihil   06 Search &amp; Destroy  07 Disobedience####Kid Loco - 2011 - Confession of a Belladonna Eater   05 I’m A Hero  10 Friends Of Mine####Fujiya &amp; Miyagi - 2008 - Lightbulbs   10 Lightbulbs####Electric Six - Tim best   02 Down At McDonnelzzz####De-Phazz - 2001 - Death by Chocolate   02 Something Special####Paradise Lost - 1995 - Draconian Times   04 Forever Failure####Cuarteto de Nos - 2006 - Raro   06 Ya no sй que hacer conmigo####Cake - 1996 - Fashion Nugget   03 Friend Is A Four Letter Word####Lake Of Tears - 1995 - Headstones   02 Raven Land####Cruachan - 2001 - Ride On (EP)   01 Ride On’####Jaya The Cat - 2003 - First Beer Of A New Day   08 Drug Squad  09 El Camino####Pungent Stench - 1993 - Dirty Rhymes And Psychotronic Beats   03 Why can the Bodies Fly####Nirvana - 1994 - Nevermind   03 Come As You Are####Pepe Deluxé - 2012 - Queen of the Wave   03 Go Supersonic####Muse - 2001 - Origin of Symmetry   05 Plug In Baby####Molotov - 1997 - Donde Jugaran Las Ninas   05 Gimme Tha Power####Arctic Monkeys - 2018 - Tranquility Base Hotel + Casino   03 American Sports  04 Tranquility Base Hotel + Casino####Boozoo Bajou - 2005 - Dust My Broom   05 Way Down####The White Stripes - 2003 - Elephant   01 Seven Nation Army","categories": [],
        "tags": ["music"],
        "url": "https://arbaev.github.io/z/2019/05/06/best-tracks-ever.html"
      },]
